'use strict';/******/(function(modules){// webpackBootstrap
/******/// The module cache
/******/var installedModules={};/******//******/// The require function
/******/function __webpack_require__(moduleId){/******//******/// Check if module is in cache
/******/if(installedModules[moduleId]){/******/return installedModules[moduleId].exports;/******/}/******/// Create a new module (and put it into the cache)
/******/var module=installedModules[moduleId]={/******/i:moduleId,/******/l:false,/******/exports:{}/******/};/******//******/// Execute the module function
/******/modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);/******//******/// Flag the module as loaded
/******/module.l=true;/******//******/// Return the exports of the module
/******/return module.exports;/******/}/******//******//******/// expose the modules object (__webpack_modules__)
/******/__webpack_require__.m=modules;/******//******/// expose the module cache
/******/__webpack_require__.c=installedModules;/******//******/// define getter function for harmony exports
/******/__webpack_require__.d=function(exports,name,getter){/******/if(!__webpack_require__.o(exports,name)){/******/Object.defineProperty(exports,name,{/******/configurable:false,/******/enumerable:true,/******/get:getter/******/});/******/}/******/};/******//******/// getDefaultExport function for compatibility with non-harmony modules
/******/__webpack_require__.n=function(module){/******/var getter=module&&module.__esModule?/******/function getDefault(){return module['default'];}:/******/function getModuleExports(){return module;};/******/__webpack_require__.d(getter,'a',getter);/******/return getter;/******/};/******//******/// Object.prototype.hasOwnProperty.call
/******/__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};/******//******/// __webpack_public_path__
/******/__webpack_require__.p="";/******//******/// Load entry module and return exports
/******/return __webpack_require__(__webpack_require__.s=0);/******/})(/************************************************************************//******/[/* 0 *//***/function(module,exports,__webpack_require__){'use strict'(function(){var ws=null;function _id(id){return document.getElementById(id);}function startWs(){ws=new WebSocket('ws://192.168.4.1:1984');ws.binaryType='arraybuffer';ws.addEventListener('message',function(event){console.log('Message from server',event.data);});}function bindButtons(){for(var i=0;i<_id('controls').children.length;i++){var btn=_id('controls').children[i];btn.addEventListener('mouseup',function(ev){console.log(ev.target.getAttribute('data-cmd'));send(parseInt(ev.target.getAttribute('data-cmd')));});}for(var i=0;i<_id('tv').children.length;i++){_id('tv').children[i].addEventListener('mouseup',function(ev){// if ()
console.log(ev.target.getAttribute('class'));ev.target.setAttribute('data-selected',true);ev.target.setAttribute('class','group'+i+' group-selected');});}}function send(data){var payload=new Uint8Array(3);payload[0]=0x08;//fill command
payload[1]=parseInt(data.h);payload[2]=parseInt(data.l);if(ws.readyState===ws.OPEN){ws.send(payload);}else{console.error('unable to communicate with socket');}}function render(){//   for (var i =0; i< 32; i++){
//     var led = document.createElement('div');
//     led.setAttribute('class','led');
//     led.addEventListener('mousedown',(ev) => {
//       console.log(ev);
//     });
//
//     if (i < 10) {
//       _id('tv').children[0].append(led);
//     } else if (i < 24) {
//       led.setAttribute('class','vled');
//       _id('tv').children[1].append(led);
//     } else {
//       _id('tv').children[2].append(led);
//     }
// }
}function updateState(state){console.log("sending new state");console.log(state);send(state);}function showTab(){}function start(){startWs();var cw=__webpack_require__(1)(send);cw.render();};start();})();/***/},/* 1 *//***/function(module,exports,__webpack_require__){"use strict";module.exports=function(sv){var service=sv;var state={h:0,l:0};function onStateChange(ev){if(ev.type==="change")state.l=parseInt(ev.target.value);else state.h=parseInt(ev.target.getAttribute('h'));service(state);}function render(){for(var i=0;i<360;i++){var color=document.createElement("span");color.setAttribute("id","d"+i);color.style.backgroundColor="hsl("+i+", 100%, 50%)";color.style.msTransform="rotate("+i+"deg)";color.style.webkitTransform="rotate("+i+"deg)";color.style.MozTransform="rotate("+i+"deg)";color.style.OTransform="rotate("+i+"deg)";color.style.transform="rotate("+i+"deg)";color.setAttribute("h",i);color.addEventListener('touchmove',onStateChange);color.addEventListener('mousemove',onStateChange);document.getElementById('h').addEventListener('change',onStateChange);document.getElementById('cw').appendChild(color);};}return{render:render};};/***/}]/******/);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,